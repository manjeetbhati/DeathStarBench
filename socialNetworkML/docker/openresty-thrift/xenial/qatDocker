ARG RESTY_IMAGE_BASE="ubuntu"
ARG RESTY_IMAGE_TAG="xenial"

#FROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}
FROM ubuntu:20.04

ARG RESTY_VERSION="1.19.3.2"
ARG RESTY_LUAROCKS_VERSION="3.5.0"
ARG RESTY_OPENSSL_VERSION="1.1.0j"
ARG RESTY_PCRE_VERSION="8.42"
ARG JAEGER_TRACING_VERSION="0.4.2"
ARG NGINX_OPENTRACING_VERSION="0.8.0"
ARG OPENTRACING_CPP_VERSION="1.5.1"
ARG RESTY_J="1"
ARG NUM_CPUS="40"
ARG RESTY_CONFIG_OPTIONS="\
    --with-file-aio \
    --with-http_addition_module \
    --with-http_auth_request_module \
    --with-http_dav_module \
    --with-http_flv_module \
    --with-http_geoip_module=dynamic \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_image_filter_module=dynamic \
    --with-http_mp4_module \
    --with-http_random_index_module \
    --with-http_realip_module \
    --with-http_secure_link_module \
    --with-http_slice_module \
    --with-http_ssl_module \
    --with-http_stub_status_module \
    --with-http_sub_module \
    --with-http_v2_module \
    --with-http_xslt_module=dynamic \
    --with-ipv6 \
    --with-mail \
    --with-mail_ssl_module \
    --with-md5-asm \
    --with-pcre-jit \
    --with-sha1-asm \
    --with-stream \
    --with-stream_ssl_module \
    --with-luajit \
    --with-threads \
    --add-dynamic-module=/usr/local/nginx-opentracing-0.8.0/opentracing \
    "

ARG RESTY_CONFIG_OPTIONS_MORE=""
ARG RESTY_ADD_PACKAGE_BUILDDEPS=""
ARG RESTY_ADD_PACKAGE_RUNDEPS=""
ARG RESTY_EVAL_PRE_CONFIGURE=""
ARG RESTY_EVAL_POST_MAKE=""

LABEL resty_version="${RESTY_VERSION}"
LABEL resty_luarocks_version="${RESTY_LUAROCKS_VERSION}"
LABEL resty_openssl_version="${RESTY_OPENSSL_VERSION}"
LABEL resty_pcre_version="${RESTY_PCRE_VERSION}"
LABEL resty_config_options="${RESTY_CONFIG_OPTIONS}"
LABEL resty_config_options_more="${RESTY_CONFIG_OPTIONS_MORE}"
LABEL resty_add_package_builddeps="${RESTY_ADD_PACKAGE_BUILDDEPS}"
LABEL resty_add_package_rundeps="${RESTY_ADD_PACKAGE_RUNDEPS}"
LABEL resty_eval_pre_configure="${RESTY_EVAL_PRE_CONFIGURE}"
LABEL resty_eval_post_make="${RESTY_EVAL_POST_MAKE}"

# These are not intended to be user-specified
ARG _RESTY_CONFIG_DEPS="--with-openssl=/tmp/openssl-1.1.1i --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}"

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        git \
        gettext-base \
        libgd-dev \
        libgeoip-dev \
        libncurses5-dev \
        libperl-dev \
        libreadline-dev \
        libxslt1-dev \
        make \
        perl \
        unzip \
        zlib1g-dev \
        cmake \
        ${RESTY_ADD_PACKAGE_BUILDDEPS} \
        ${RESTY_ADD_PACKAGE_RUNDEPS}
    RUN cd /tmp \
    && if [ -n "${RESTY_EVAL_PRE_CONFIGURE}" ]; then eval $(echo ${RESTY_EVAL_PRE_CONFIGURE}); fi \
    && curl -fSL https://www.openssl.org/source/openssl-1.1.1i.tar.gz -o openssl-1.1.1i.tar.gz \
    && tar xzf  openssl-1.1.1i.tar.gz

    COPY pcre-8.42.tar.gz /tmp/pcre-8.42.tar.gz
    RUN cd /tmp && tar xzf pcre-8.42.tar.gz
  ### Build opentracing-cpp
    RUN cd /tmp \
    && curl -fSL https://github.com/opentracing/opentracing-cpp/archive/v1.5.1.tar.gz -o opentracing-cpp-1.5.1.tar.gz\
    && tar -zxf opentracing-cpp-1.5.1.tar.gz \
    && cd opentracing-cpp-1.5.1 \
    && mkdir -p cmake-build \
    && cd cmake-build \
    && cmake -DCMAKE_BUILD_TYPE=Release \
             -DBUILD_MOCKTRACER=OFF \
             -DBUILD_STATIC_LIBS=OFF \
             -DBUILD_TESTING=OFF \
       .. \
    && make -j${NUM_CPUS} \
    && make -j${NUM_CPUS} install \
    && cd /tmp \
    && rm -rf opentracing-cpp-${OPENTRACING_CPP_VERSION}.tar.gz \
              opentracing-cpp-${OPENTRACING_CPP_VERSION} \
  ### Build lua-resty-hmac
    && cd /tmp \
    && git clone https://github.com/jkeys089/lua-resty-hmac.git \
    && cd lua-resty-hmac \
    && make \
    && make install \
    && cd /tmp \
    && rm -rf lua-resty-hmac \

  ### Add Jaeger plugin
    && cd /usr/local/lib \
    && curl -fSL https://github.com/jaegertracing/jaeger-client-cpp/releases/download/v0.4.2/libjaegertracing_plugin.linux_amd64.so -o libjaegertracing_plugin.so

ENV LUAJIT_LIB=/usr/local/openresty/luajit/lib
ENV LUAJIT_INC=/usr/local/openresty/luajit/include/luajit-2.1

RUN cd /usr/local \
    && curl -fSL https://github.com/opentracing-contrib/nginx-opentracing/archive/v0.8.0.tar.gz -o nginx-opentracing-0.8.0.tar.gz \
    && tar -zxf nginx-opentracing-0.8.0.tar.gz \
    && rm nginx-opentracing-0.8.0.tar.gz \
    && cd /tmp \
    && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \
    && tar xzf openresty-${RESTY_VERSION}.tar.gz \
    && cd /tmp/openresty-${RESTY_VERSION} \
    && ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \
    && make -j${RESTY_J} \
    && make -j${RESTY_J} install \
    && cd /tmp \
    && rm -rf \
        openssl-${RESTY_OPENSSL_VERSION} \
        openssl-${RESTY_OPENSSL_VERSION}.tar.gz \
        openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION}
        #pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION}

ARG QATLIB_VERSION="22.07.0"
ARG QAT_ENGINE_VERSION="v0.6.13"
ARG ASYNC_NGINX_VERSION="v0.4.7"
ARG IPSEC_MB_VERSION="v1.2"
ARG IPP_CRYPTO_VERSION="ippcp_2021.5"

RUN apt update && \
    env DEBIAN_FRONTEND=noninteractive apt install -y \
    libudev-dev \
    make \
    gcc \
    g++ \
    nasm \
    pkg-config \
    libssl-dev \
    zlib1g-dev \
    wget \
    git \
    yasm \
    autoconf \
    cmake \
    libtool && \
    git clone --depth 1 -b $ASYNC_NGINX_VERSION https://github.com/intel/asynch_mode_nginx.git && \
    git clone --depth 1 -b $QAT_ENGINE_VERSION https://github.com/intel/QAT_Engine && \
    git clone --depth 1 -b $IPP_CRYPTO_VERSION https://github.com/intel/ipp-crypto && \
    git clone --depth 1 -b $IPSEC_MB_VERSION https://github.com/intel/intel-ipsec-mb && \
    git clone --depth 1 -b $QATLIB_VERSION https://github.com/intel/qatlib && \
    git clone https://github.com/openresty/lua-nginx-module && mv lua-nginx-module /usr/local/

RUN cd /qatlib && \
    ./autogen.sh && \
    ./configure \
    --prefix=/usr \
    --enable-systemd=no && \
    make -j && \
    make install samples-install

RUN cd /ipp-crypto/sources/ippcp/crypto_mb && \
    cmake . -B"../build" \
    -DOPENSSL_INCLUDE_DIR=/usr/include/openssl \
    -DOPENSSL_LIBRARIES=/usr/lib64 \
    -DOPENSSL_ROOT_DIR=/usr/bin/openssl && \
    cd ../build && \
    make crypto_mb && make install
RUN cd /intel-ipsec-mb && \
    make && make install LIB_INSTALL_DIR=/usr/lib64

RUN cd /QAT_Engine && \
    ./autogen.sh && \
    ./configure \
    --enable-qat_sw \
    --with-qat_sw_install_dir=/usr/local && \
    make && make install


# openresty
#pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION}
ENV LUAJIT_LIB=/usr/local/openresty/luajit/lib
ENV LUAJIT_INC=/usr/local/openresty/luajit/include/luajit-2.1

    && curl -fSL  https://luarocks.github.io/luarocks/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
    && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
    && cd luarocks-${RESTY_LUAROCKS_VERSION} \
    && ./configure \
        --prefix=/usr/local/openresty/luajit \
        --with-lua=/usr/local/openresty/luajit \
        --lua-suffix=jit-2.1.0-beta3 \
        --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \
    && make build \
    && make install \
    && cd /tmp \
    && if [ -n "${RESTY_EVAL_POST_MAKE}" ]; then eval $(echo ${RESTY_EVAL_POST_MAKE}); fi \
    && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \
    && if [ -n "${RESTY_ADD_PACKAGE_BUILDDEPS}" ]; then DEBIAN_FRONTEND=noninteractive apt-get remove --purge "${RESTY_ADD_PACKAGE_BUILDDEPS}" ; fi \
    && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \
    && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \
    && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log

# Add additional binaries into PATH for convenience
ENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin

# Add LuaRocks paths
# If OpenResty changes, these may need updating:
#    /usr/local/openresty/bin/resty -e 'print(package.path)'
#    /usr/local/openresty/bin/resty -e 'print(package.cpath)'
ENV LUA_PATH="/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua;/usr/local/openresty/lualib/?/?.lua;/usr/local/openresty/lualib/thrift/?.lua"
ENV LUA_CPATH="/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/openresty/lualib/?/?.so"

COPY docker/openresty-thrift/lua-thrift /usr/local/openresty/lualib/thrift
COPY docker/openresty-thrift/lua-bridge-tracer /tmp/lua-bridge-tracer
COPY docker/openresty-thrift/lua-json/json.lua /usr/local/openresty/lualib/json/json.lua

RUN cd /usr/local/openresty/lualib/thrift/src \
    && make \
    && make install \
  ### Build bridge tracer
    && cd /tmp/lua-bridge-tracer \
    && mkdir -p cmake-build/usr/local/nginx/lua-scripts \
    && cd cmake-build \
    && cmake -DCMAKE_BUILD_TYPE=Release \
       .. \
    && make -j${NUM_CPUS} \
    && make -j${NUM_CPUS} install
#    && cd /tmp
#    && rm -rf lua-bridge-tracer

ENV LUA_PATH=$LUA_PATH;/gen-lua/?.lua

RUN luarocks install long \
    && luarocks install lua-resty-jwt \
    && ldconfig
    
COPY openresty /usr/local/openresty
RUN cd /usr/local/openresty && \
    ./configure --with-debug --prefix=/usr/local/openresty \
    --with-luajit \
    --with-http_ssl_module \
    --with-pcre=/tmp/pcre-8.42 \
    --with-http_ssl_module \
    --with-pcre-jit \
    --add-dynamic-module=bundle/nginx-1.19.3/modules/nginx_qat_module \
    --add-dynamic-module=/usr/local/nginx-opentracing-0.8.0/opentracing \
    --with-cc-opt="-DNGX_SECURE_MEM -I/usr/local/openresty/libs/.openssl/include -Wno-error=deprecated-declarations" \
    --with-ld-opt="-Wl,-rpath=/usr/local/openresty/libs/.openssl -L/usr/local/openresty/libs/.openssl/lib" && \
    make && make install
COPY nginx-web-server/lua-scripts /usr/local/openresty/nginx/lua-scripts
COPY nginx-web-server/pages /usr/local/openresty/nginx/pages
COPY nginx-web-server/conf/nginx.conf /usr/local/openresty/nginx/conf/nginx.conf
COPY nginx-web-server/jaeger-config.json /usr/local/openresty/nginx/jaeger-config.json
COPY gen-lua /gen-lua
COPY nginx-web-server/keys/nginx.crt /etc/ssl/certs/nginx.crt
COPY nginx-web-server/conf/nginx.conf /usr/share/nginx/conf/nginx.conf
COPY nginx-web-server/keys/nginx.key /etc/ssl/certs/nginx.key
COPY docker/openresty-thrift/lua-thrift /usr/local/openresty/lualib/thrift
COPY keys /keys

RUN cp /usr/lib64/libIPSec_MB.so.1 /usr/lib/x86_64-linux-gnu/
RUN cp /usr/local/lib/libcrypto_mb.so.11.3 /usr/lib/x86_64-linux-gnu/
RUN  mkdir -p /usr/share/package-licenses/qatlib/ && mkdir -p /usr/share/package-licenses/QAT_Engine/ && mkdir -p /usr/share/package-licenses/ipp-crypto/
#RUN mkdir -p /usr/share/package-licenses/asynch_mode_nginx/ && mkdir -p /usr/share/package-licenses/intel-ipsec-mb/
RUN cp /qatlib/LICENSE /usr/share/package-licenses/qatlib/LICENSE
RUN cp /QAT_Engine/LICENSE /usr/share/package-licenses/QAT_Engine/LICENSE

RUN ldconfig && apt update && env DEBIAN_FRONTEND=noninteractive apt install -y haproxy libnginx-mod-http-lua

CMD ["/usr/local/openresty/bin/openresty", "-g", "daemon off;"]

STOPSIGNAL SIGQUIT







    

    
